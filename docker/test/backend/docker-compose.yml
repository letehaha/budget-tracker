services:
  test-db:
    image: postgres:16
    restart: always
    container_name: test-budget-tracker-db
    # Use tmpfs for ultra-fast test database operations (data stored in RAM)
    # Increased size to accommodate multiple test databases and WAL files
    tmpfs:
      - /var/lib/postgresql/data:noexec,nosuid,size=4g
    environment:
      - POSTGRES_USER=${APPLICATION_DB_USERNAME}
      - POSTGRES_PASSWORD=${APPLICATION_DB_PASSWORD}
      - POSTGRES_DB=${APPLICATION_DB_DATABASE}
    env_file: ../../../.env.test
    # Specific less secure setup for tests only to speed them up and reduce chance
    # of deadlocks
    # Durability Settings
    # - fsync=off - Disables forced disk writes, major speed boost
    # - synchronous_commit=off - Commits don't wait for disk sync
    # - full_page_writes=off - Reduces WAL (Write-Ahead Log) overhead
    # Memory Settings
    # - shared_buffers=256MB - More RAM for caching data pages
    # - effective_cache_size=512MB - Tells planner about available OS cache
    # - work_mem=16MB - Memory for sort/hash operations per connection
    # - maintenance_work_mem=64MB - Memory for maintenance operations
    # - wal_buffers=16MB - WAL buffer size
    # Connection & Logging
    # - max_connections=200 - Supports parallel test execution
    # - log_statement=none & log_duration=off - Reduces logging overhead
    # - deadlock_timeout=1s - Faster deadlock detection
    command: >
      postgres
      -c fsync=off
      -c synchronous_commit=off
      -c full_page_writes=off
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c shared_buffers=256MB
      -c effective_cache_size=512MB
      -c maintenance_work_mem=64MB
      -c work_mem=16MB
      -c max_connections=200
      -c log_statement=none
      -c log_duration=off
      -c log_lock_waits=on
      -c deadlock_timeout=1s
    labels:
      - 'com.docker.compose.project=test'

  test-redis:
    image: redis:7
    container_name: test-budget-tracker-redis
    # Use tmpfs for ultra-fast Redis operations (data stored in RAM)
    tmpfs:
      - /data:noexec,nosuid,size=1g
    labels:
      - 'com.docker.compose.project=test'

  test-runner:
    build:
      context: ../../..
      dockerfile: docker/test/backend/Dockerfile
    depends_on:
      - test-db
      - test-redis
    environment:
      - NODE_ENV=test
      # so package `config` will look into the correct place
      - NODE_CONFIG_DIR=./packages/backend/config
    env_file: ../../../.env.test
    labels:
      - 'com.docker.compose.project=test'

# volumes section removed - using tmpfs for test performance
